{
    "summary": "The code includes functions for mouse actions like capturing screenshots, clicking, and typing text using xdotool and pyautogui. Additionally, it has functions for pyautogui-based mouse movements with a wait function and 'mouseToggleDown'/'mouseToggleUp' functionality to simulate left mouse button presses and releases at specific coordinates.",
    "details": [
        {
            "comment": "Code contains functions to capture screenshots, click at specific coordinates using pyautogui and xdotool utilities. The \"click_one\" function performs a left-click while the \"click_two\" function performs a right-click.",
            "location": "\"/media/root/Toshiba XG3/works/SingularGPT/docs/src/zexui_lib/py_gui_commands.py\":0-33",
            "content": "import subprocess\nimport re\nfrom time import sleep\nimport pyautogui\nimport random\ndef capture(_img):\n    # Capture the entire screen\n    screenshot = pyautogui.screenshot()\n    print(_img)\n    # Save the screenshot to the same file, overwriting the previous screenshot\n    screenshot.save(_img)\ndef click_one(x, y):\n    \"\"\"\n    This function uses the xdotool utility to move the mouse to given x and y coordinates on the screen and\n    performs a left-click (mouse button 1) operation.\n    Parameters:\n    x (int): The x-coordinate on the screen where the left-click operation needs to be performed.\n    y (int): The y-coordinate on the screen where the left-click operation needs to be performed.\n    \"\"\"\n    # # move the mouse to a specific coordinate\n    pyautogui.moveTo(x, y, duration=0.6)\n    # click the left mouse button\n    pyautogui.click(x, y)\ndef click_two(x, y):\n    \"\"\"\n    This function uses the xdotool utility to move the mouse to given x and y coordinates on the screen and\n    performs a right-click (mouse button 2) operation."
        },
        {
            "comment": "This code provides functions to move the mouse, write text, and press keys using the pyautogui and xdotool utilities. The `moveTo` function moves the mouse to a specific coordinate, `doubleClick` performs a right-click at a given coordinate, `write` types out provided text with optional delay, and `press_key` simulates key presses on the keyboard.",
            "location": "\"/media/root/Toshiba XG3/works/SingularGPT/docs/src/zexui_lib/py_gui_commands.py\":35-73",
            "content": "    Parameters:\n    x (int): The x-coordinate on the screen where the right-click operation needs to be performed.\n    y (int): The y-coordinate on the screen where the right-click operation needs to be performed.\n    \"\"\"\n    # move the mouse to a specific coordinate\n    pyautogui.moveTo(x, y)\n    # Move the mouse to the provided x and y coordinates and perform a right click\n    pyautogui.doubleClick(x, y)\ndef write(_text, delay):\n    \"\"\"\n    This function uses the xdotool utility to simulate keyboard input and type out the provided text.\n    Parameters:\n    _text (str): The text to be typed out.\n    \"\"\"\n    if delay: \n        delay = 0.2\n        pyautogui.typewrite(_text, interval=delay)\n    else:\n        pyautogui.write(_text)\ndef press_key(x):\n    \"\"\"\n    This function uses the xdotool utility to simulate key presses on the keyboard.\n    Parameters:\n    x (str): The key to be press. For example, 'ctrl+v', 'ctrl+t', 'shift+tab' etc.\n    \"\"\"\n    # press and release a key\n    pyautogui.press(x)\ndef left_click():\n    \"\"\""
        },
        {
            "comment": "This code defines functions for performing different types of mouse clicks using the xdotool utility. The click() function performs a left-click, middleClick() performs a middle-click, and rightClick() performs a right-click. Additionally, there are two other functions, left_click_at(x,y) and middle_click_at(x,y), that allow for performing left and middle clicks at specific coordinates on the screen by first moving the mouse to the given position before clicking.",
            "location": "\"/media/root/Toshiba XG3/works/SingularGPT/docs/src/zexui_lib/py_gui_commands.py\":74-110",
            "content": "    This function uses the xdotool utility to perform a left-click (mouse button 1) operation.\n    \"\"\"\n    # click the left mouse button\n    pyautogui.click()\ndef middle_click():\n    \"\"\"\n    This function uses the xdotool utility to perform a middle-click (mouse button 2) operation.\n    \"\"\"\n    pyautogui.middleClick()\ndef right_click():\n    \"\"\"\n    This function uses the xdotool utility to perform a right-click (mouse button 3) operation.\n    \"\"\"\n    pyautogui.rightClick()\ndef left_click_at(x,y):\n    \"\"\"\n    This function uses the xdotool utility to move the mouse to the provided coordinates and perform\n    a left-click (mouse button 1) operation.\n    Parameters:\n    x (int): The x-coordinate on the screen where the left-click operation needs to be performed.\n    y (int): The y-coordinate on the screen where the left-click operation needs to be performed.\n    \"\"\"\n    pyautogui.click(x, y)\ndef middle_click_at(x,y):\n    \"\"\"\n    This function uses the xdotool utility to move the mouse to the provided coordinates and perform"
        },
        {
            "comment": "The code defines three functions for performing different mouse operations using the xdotool utility. left_click_at() performs a left-click (mouse button 1) at specified coordinates, middle_click_at() performs a middle-click (mouse button 2), and right_click_at() performs a right-click (mouse button 3). The mouse_move() function moves the cursor to the specified coordinates using xdotool.",
            "location": "\"/media/root/Toshiba XG3/works/SingularGPT/docs/src/zexui_lib/py_gui_commands.py\":111-139",
            "content": "    a middle-click (mouse button 2) operation.\n    Parameters:\n    x (int): The x-coordinate on the screen where the middle-click operation needs to be performed.\n    y (int): The y-coordinate on the screen where the middle-click operation needs to be performed.\n    \"\"\"\n    pyautogui.middleClick(x, y)\ndef right_click_at(x,y):\n    \"\"\"\n    This function uses the xdotool utility to move the mouse to the provided coordinates and perform\n    a right-click (mouse button 3) operation.\n    Parameters:\n    x (int): The x-coordinate on the screen where the right-click operation needs to be performed.\n    y (int): The y-coordinate on the screen where the right-click operation needs to be performed.\n    \"\"\"\n    pyautogui.rightClick(x, y)\ndef mouse_move(x, y):\n    \"\"\"\n    This function uses the xdotool utility to move the mouse to the provided coordinates.\n    Parameters:\n    x (int): The x-coordinate on the screen where the mouse cursor needs to be moved.\n    y (int): The y-coordinate on the screen where the mouse cursor needs to be moved."
        },
        {
            "comment": "This code contains functions for mouse and scrolling movements using pyautogui, as well as a wait function with optional delay. The 'mouseToggleUp' function gets the coordinates of a target object and triggers a left mouse button up event at that location.",
            "location": "\"/media/root/Toshiba XG3/works/SingularGPT/docs/src/zexui_lib/py_gui_commands.py\":140-181",
            "content": "    \"\"\"\n    # move the mouse to a specific coordinate\n    pyautogui.moveTo(x, y)\ndef scroll_up(x):\n    \"\"\"\n    Simulates scrolling up by a specified x using xdotool.\n    :param x: The x of scrolling to be done vertically (in pixels)\n    \"\"\"\n    pyautogui.scroll(x)\ndef scroll_down(x):\n    \"\"\"\n    Simulates scrolling down by a specified x using xdotool.\n    :param x: The x of scrolling to be done vertically (in pixels)\n    \"\"\"\n    pyautogui.scroll(-x)\ndef scroll_left(x):\n    \"\"\"\n    Simulates scrolling left with the mouse wheel using xdotool.\n    :param x: The x of scrolling to be done horizontally (in pixels)\n    \"\"\"\n    pyautogui.hscroll(x)\ndef scroll_right(x):\n    \"\"\"\n    Simulates scrolling right with the mouse wheel using xdotool.\n    :param x: The x of scrolling to be done horizontally (in pixels)\n    \"\"\"\n    pyautogui.hscroll(-x)\ndef wait(x):\n    if not x:\n        x = 3\n    sleep(x)\ndef mouseToggleUp(self):\n    # Get the x and y coordinates of the target object\n    x, y = self.cords[0], self.cords[1]\n    pyautogui.mouseUp(x=x, y=y, button='left')"
        },
        {
            "comment": "This code defines a function `mouseToggleDown` that takes the x and y coordinates of an object and uses pyautogui to simulate left mouse button press at that location.",
            "location": "\"/media/root/Toshiba XG3/works/SingularGPT/docs/src/zexui_lib/py_gui_commands.py\":183-186",
            "content": "def mouseToggleDown(self):\n    # Get the x and y coordinates of the target object\n    x, y = self.cords[0], self.cords[1]\n    pyautogui.mouseDown(x=x, y=y, button='left')"
        }
    ]
}